library(tidyverse)
library(fixest)
library(DRDID)
library(did)
options(readr.show_progress = FALSE, readr.show_col_types = FALSE)
setFixest_etable(markdown = FALSE)
df <- read_csv("data/tva.csv")
head(df)
View(df)
m_d1_y1960 <- df %>% filter(year == 1960 & tva == 1) %>% pull(ln_agriculture) %>% mean()
m_d1_y1960
means |>
group_by(tva, year) |>
summarise(mean = mean(ln_agriculture))
df |>
group_by(tva, year) |>
summarise(mean = mean(ln_agriculture))
df |>
group_by(tva, year) |>
summarise(mean = mean(ln_agriculture)) |>
pivot_wider(names_from = year, values_from = mean) |>
mutate(diff = `1960` - `1940`)
m_d1_y1960 <- df %>% filter(year == 1960 & tva == 1) %>% pull(ln_agriculture) %>% mean()
df |>
group_by(tva, year) |>
summarise(mean = mean(ln_agriculture)) |>
pivot_wider(names_from = year, values_from = mean) |>
mutate(diff_60_40 = `1960` - `1940`)
df |>
group_by(tva, year) |>
summarise(mean = mean(ln_agriculture)) |>
pivot_wider(names_from = year, values_from = mean) |>
mutate(diff_60_40 = `1960` - `1940`) |>
janitor::adorn_totals()
dd <- means |>
select(tva, diff_60_40) |>
spread(tva, diff_60_40) |>
mutate(diff = `1` - `0`) |>
pull(diff)
m_d1_y1960 <- df %>% filter(year == 1960 & tva == 1) %>% pull(ln_agriculture) %>% mean()
df |>
group_by(tva, year) |>
summarise(mean = mean(ln_agriculture)) |>
pivot_wider(names_from = year, values_from = mean) |>
mutate(diff_60_40 = `1960` - `1940`) -> means
dd <- means |>
select(tva, diff_60_40) |>
spread(tva, diff_60_40) |>
mutate(diff = `1` - `0`) |>
pull(diff)
View(means)
dd <- means |>
select(tva, diff_60_40) |>
spread(tva, diff_60_40)
means |>
select(tva, diff_60_40) |>
spread(tva, diff_60_40)
means |>
select(tva, diff_60_40) |>
spread(tva, diff_60_40) |>
mutate(diff = `1` - `0`)
did_2by2 <- df_2by2 |>
lm(ln_agriculture ~ tva + post + tva:post, data = .) |>
summary() |>
coef() |>
pull(1)
df_2by2 <- df |>
filter(year %in% c(1940, 1960))
did_2by2 <- df_2by2 |>
lm(ln_agriculture ~ tva + post + tva:post, data = .) |>
summary() |>
coef() |>
pull(1)
df_2by2 <- df |>
filter(year %in% c(1940, 1960))
did_2by2 <- df_2by2 |>
lm(ln_agriculture ~ tva + post + tva:post, data = .) |>
summary() |>
coef() |>
pull(1)
df_2by2 <- df |>
filter(year %in% c(1940, 1960))
did_2by2 <- df_2by2 |>
lm(ln_agriculture ~ tva + post + tva:post, data = .) |>
summary() |>
coef() |>
pull(1)
df_2by2 <- df |>
filter(year %in% c(1940, 1960))
did_2by2 <- df_2by2 |>
lm(ln_agriculture ~ tva + post + tva:post) |>
summary() |>
coef() |>
pull(1)
df_2by2 <- df |>
filter(year %in% c(1940, 1960))
did_2by2 <- df_2by2 |>
lm(formula = ln_agriculture ~ tva + post + tva:post) |>
summary() |>
coef() |>
pull(1)
df_2by2 <- df |>
filter(year %in% c(1940, 1960))
did_2by2 <- df_2by2 |>
lm(formula = ln_agriculture ~ tva + post + tva:post) |>
summary() |>
coef()
df_2by2 <- df |>
filter(year %in% c(1940, 1960))
did_2by2 <- df_2by2 |>
lm(formula = ln_agriculture ~ tva + post + tva:post) |>
summary()
did_2by2
df_2by2 |>
feols(ln_agriculture ~ tva + post | county_code + year) |>
summary()
did_2by2_feols <- df_2by2 |>
feols(c(ln_agriculture, ln_manufacturing) ~ i(tva * post) | county_code + year,
cluseter = ~ county_code) |>
summary()
did_2by2_feols <- df_2by2 |>
feols(c(ln_agriculture, ln_manufacturing) ~ i(tva * post) | county_code + year,
cluster = ~ county_code) |>
summary()
df_2by2 |>
feols(c(ln_agriculture, ln_manufacturing) ~ i(tva * post) | county_code + year,
cluster = ~ county_code) |>
summary()
did_2by2_feols <- df_2by2 |>
feols(c(ln_agriculture, ln_manufacturing) ~
i(tva * post) |  year,
cluster = ~ county_code) |>
summary()
df_2by2 |>
feols(c(ln_agriculture, ln_manufacturing) ~
i(tva * post) |  year,
cluster = ~ county_code) |>
summary()
df_2by2 |>
feols(c(ln_agriculture, ln_manufacturing) ~
i(tva * post) ,
cluster = ~ county_code) |>
summary()
did_2by2_feols_fe <- df_2by2 |>
feols(c(ln_agriculture, ln_manufacturing) ~
i(tva * post) | county_code + year,
cluster = ~ county_code) |>
summary()
did_2by2_feols_fe <- df_2by2 |>
feols(c(ln_agriculture, ln_manufacturing) ~
i(tva * post) | county_code + year,
cluster = ~ county_code) |>
summary()
did_2by2
did_2by2_feols_fe <- df_2by2 |>
feols(c(ln_agriculture, ln_manufacturing) ~
i(tva * post) | county_code + year,
cluster = ~ county_code) |>
summary()
did_2by2_feols_fe
df_2by2 |>
feols(c(ln_agriculture, ln_manufacturing) ~
i(tva * post) | county_code,
cluster = ~ county_code) |>
summary()
es_agriculture <- df |>
feols(ln_agriculture ~
i(year* tva, ref = c(0, 1940)) | county_code + year,
cluster = ~ county_code)
iplot(es_agriculture, title = "Event Study: Agriculture")
es_agriculture <- df |>
mutate(rel_year= ifelse(tva ==0, 1940, year)) |>
feols(ln_agriculture ~
i(year* tva, ref = c(0, 1940)) | county_code + year,
cluster = ~ county_code)
iplot(es_agriculture, title = "Event Study: Agriculture")
es_agriculture <- df |>
mutate(rel_year= ifelse(tva ==0, 190, year)) |>
feols(ln_agriculture ~
i(rel_year, ref = c(1940, 1900)) | county_code + year,
cluster = ~ county_code)
iplot(es_agriculture, title = "Event Study: Agriculture")
es_agriculture <- df |>
mutate(rel_year= ifelse(tva ==0, 190, year)) |>
feols(ln_agriculture ~
i(rel_year, ref = c(1940, 1900)) | county_code + year,
cluster = ~ county_code)
iplot(es_agriculture
es_agriculture <- df |>
mutate(rel_year= ifelse(tva ==0, 190, year)) |>
feols(ln_agriculture ~
i(rel_year, ref = c(1940, 1900)) | county_code + year,
cluster = ~ county_code)
iplot(es_agriculture)
es_agriculture <- df |>
mutate(rel_year= ifelse(tva ==0, 1900, year)) |>
feols(ln_agriculture ~
i(rel_year, ref = c(1940, 1900)) | county_code + year,
cluster = ~ county_code)
iplot(es_agriculture)
es_manufacturing <- df |>
mutate(rel_year= ifelse(tva ==0, 1940, year)) |>
feols(ln_manufacturing ~
i(rel_year, ref = c(1940)) | county_code + year,
cluster = ~ county_code)
iplot(es_agriculture)
es_manufacturing <- df |>
mutate(rel_year= ifelse(tva ==0, 1940, year)) |>
feols(ln_manufacturing ~
i(rel_year, ref = c(1940)) | county_code + year,
cluster = ~ county_code)
iplot(es_manufacturing)
broom:tidy(es_manufacturing)
broom::tidy(es_manufacturing)
broom::tidy(es_manufacturing) |>
mutate(rel_year = as.numeric(str_replace(term, 'rel_year::', ''))) |>
#  bind_rows(tible())
ggplot(aes(x = rel_year, y = estimate)) +
geom_errorbar(aes(ymin = estimate - 1.96*std.error, ymax = estimate + 1.96*std.error)) +
geom_point() +
broom::tidy(es_manufacturing) |>
mutate(rel_year = as.numeric(str_replace(term, 'rel_year::', ''))) |>
#  bind_rows(tible())
ggplot(aes(x = rel_year, y = estimate)) +
geom_errorbar(aes(ymin = estimate - 1.96*std.error, ymax = estimate + 1.96*std.error)) +
geom_point()
broom::tidy(es_manufacturing) |>
mutate(rel_year = as.numeric(str_replace(term, 'rel_year::', ''))) |>
bind_rows(tible(rel_year = 1940, estimate = 0, std.error = 0)) |>
ggplot(aes(x = rel_year, y = estimate)) +
geom_errorbar(aes(ymin = estimate - 1.96*std.error, ymax = estimate + 1.96*std.error)) +
geom_point()
broom::tidy(es_manufacturing) |>
mutate(rel_year = as.numeric(str_replace(term, 'rel_year::', ''))) |>
bind_rows(tible(rel_year = 1940, estimate = 0)) |>
ggplot(aes(x = rel_year, y = estimate)) +
geom_errorbar(aes(ymin = estimate - 1.96*std.error, ymax = estimate + 1.96*std.error)) +
geom_point()
broom::tidy(es_manufacturing) |>
mutate(rel_year = as.numeric(str_replace(term, 'rel_year::', ''))) |>
bind_rows(tibble(rel_year = 1940, estimate = 0)) |>
ggplot(aes(x = rel_year, y = estimate)) +
geom_errorbar(aes(ymin = estimate - 1.96*std.error, ymax = estimate + 1.96*std.error)) +
geom_point()
broom::tidy(es_manufacturing) |>
mutate(rel_year = as.numeric(str_replace(term, 'rel_year::', ''))) |>
bind_rows(tibble(rel_year = 1940, estimate = 0)) |>
ggplot(aes(x = rel_year, y = estimate)) +
geom_errorbar(aes(ymin = estimate - 1.96*std.error, ymax = estimate + 1.96*std.error)) +
geom_point() +
theme_bw()
broom::tidy(es_manufacturing) |>
mutate(rel_year = as.numeric(str_replace(term, 'rel_year::', ''))) |>
bind_rows(tibble(rel_year = 1940, estimate = 0)) |>
ggplot(aes(x = rel_year, y = estimate)) +
geom_errorbar(aes(ymin = estimate - 1.96*std.error, ymax = estimate + 1.96*std.error)) +
geom_point() +
theme_bw()+
geom_abline(intercept = coef(pre_trand_line[1]),
slope = coef(pre_trand_line[2]),
color = 'red')
broom::tidy(es_manufacturing) |>
mutate(rel_year = as.numeric(str_replace(term, 'rel_year::', ''))) |>
bind_rows(tibble(rel_year = 1940, estimate = 0)) |>
ggplot(aes(x = rel_year, y = estimate)) +
geom_errorbar(aes(ymin = estimate - 1.96*std.error, ymax = estimate + 1.96*std.error)) +
geom_point() +
theme_bw()+
geom_abline(intercept = coef(pre_trend_line[1]),
slope = coef(pre_trend_line[2]),
color = 'red')
View(df)
library(tidyverse)
library(fixest)
library(DRDID)
library(did)
options(readr.show_progress = FALSE, readr.show_col_types = FALSE)
setFixest_etable(markdown = FALSE)
df <- read_csv("data/tva.csv")
broom::tidy(es_manufacturing) |>
mutate(rel_year = as.numeric(str_replace(term, 'rel_year::', ''))) |>
bind_rows(tibble(rel_year = 1940, estimate = 0)) |>
ggplot(aes(x = rel_year, y = estimate)) +
geom_errorbar(aes(ymin = estimate - 1.96*std.error, ymax = estimate + 1.96*std.error)) +
geom_point() +
theme_bw()+
geom_abline(intercept = coef(pre_trend_line[1]),
slope = coef(pre_trend_line[2]),
color = 'red')
install.package("fixest", dependencies= T)
install.packages("fixest", dependencies= T)
library(haven)  # Read Stata .dta files
library(fixest) # Sun & Abraham (and regular TWFE and high-dimensional FEs, etc., etc.)
# load data
baker = read_dta('https://github.com/scunning1975/mixtape/raw/master/baker.dta')
View(baker)
# change to 0 anyone never treated, but
# because all units in this dataset are treated it is kind of pointless. But I
# include it so you remember to do it, but you don't need to in baker.dta.
baker$treated = baker$treat_date != 0
iplot(res_naive, main = "Naive TWFE")
# Naive TWFE (bc it assumes homogeneous treatment profiles) Event Study (SEs clustered by state)
res_naive = feols(
y ~ i(time_til, treated, ref = -1) | id + year,
data = baker, vcov = ~state
)
summary(res_naive)
iplot(res_naive, main = "Naive TWFE")
# ------------------------------------------------------------------------------
# name: baker_cs.R
# author: scott cunningham (baylor), pedro sant'anna (microsoft, vandy)
# description: implement cs on the baker simulated dataset
# last updated: february 19, 2022
# ------------------------------------------------------------------------------
# load packages
# install.packages("haven", dependencies = TRUE)
library(haven)
# install.packages("devtools"); devtools::install_github("bcallaway11/did")
library(ggplot2)
library(did) # Callaway & Sant'Anna
baker <- read_dta("https://github.com/scunning1975/mixtape/raw/master/baker.dta")
# untreated units have effective year of 0
baker$treat_date[is.na(baker$treat_date)] <- 0
remove(list = ls())
# ------------------------------------------------------------------------------
# name: baker_cs.R
# author: scott cunningham (baylor), pedro sant'anna (microsoft, vandy)
# description: implement cs on the baker simulated dataset
# last updated: february 19, 2022
# ------------------------------------------------------------------------------
# load packages
# install.packages("haven", dependencies = TRUE)
library(haven)
# install.packages("devtools"); devtools::install_github("bcallaway11/did")
library(ggplot2)
library(did) # Callaway & Sant'Anna
baker <- read_dta("https://github.com/scunning1975/mixtape/raw/master/baker.dta")
# untreated units have effective year of 0
baker$treat_date[is.na(baker$treat_date)] <- 0
# Estimating the effect on y2 (constant) and y (dynamic treatment)
atts <- att_gt(
yname = "y", # LHS variable
tname = "year", # panel time variable
idname = "id", # firms' panel id variable
gname = "treat_date", # first treatment period variable
data = baker, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "ipw", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "notyettreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE, # if TRUE, print detailed results
clustervars = "state", # cluster level
panel = TRUE # whether the data is panel or repeated cross-sectional
)
# Calculate group-time ("group") ATTs and overall ("simple") ATT
agg_effects <- aggte(atts, type = "simple", balance_e=TRUE)
summary(agg_effects)
d overall ("simple") ATT
# Calculate group-time ("group") ATTs and overall ("simple") ATT
agg_effects <- aggte(atts, type = "group", balance_e=TRUE)
summary(agg_effects)
# Group-time ATTs
summary(atts)
# Plot group-time ATTs
ggdid(atts)
